cflags = -Wall -Iinclude -Idate/include
ldflags = -lcurl -Llib -ldate-tz
# -lcurl: libcurl4-openssl-dev
# -ldate-tz: ./date/

rule cc
  command = g++ -c $cflags $in -o $out

rule link
  command = g++ $in -o $out $ldflags

rule cmake
  command = cmake $flags $in $buildflags

rule mkdir
  command = mkdir -p $out

rule cp
  command = cp $flags $in $out

# api implementation
build .build/gmcapi/GmcApiRequest.o: cc src/gmcapi/GmcApiRequest.cpp | src/gmcapi/GmcApiRequest.hpp
build .build/gmcapi/GmcConnection.o: cc src/gmcapi/GmcConnection.cpp | src/gmcapi/GmcConnection.hpp
build .build/gmcapi/GmcServer.o: cc src/gmcapi/GmcServer.cpp | src/gmcapi/GmcServer.hpp src/gmcapi/Paths/Paths.hpp
build src/gmcapi/Paths/Paths.hpp: phony $
  src/gmcapi/Paths/GmcAuthentication.hpp $
  src/gmcapi/Paths/GmcCsrfInitialization.hpp $
  src/gmcapi/Paths/GmcDefaultServerFetch.hpp $
  src/gmcapi/Paths/GmcServerGetInfo.hpp $
  src/gmcapi/Paths/GmcServerRcon.hpp $
  src/gmcapi/Paths/GmcServerStart.hpp $
  src/gmcapi/Paths/GmcServerStop.hpp $
  src/gmcapi/Paths/GmcServerConsoleGet.hpp

# api paths
build .build/gmcapi/Paths/GmcAuthentication.o: cc src/gmcapi/Paths/GmcAuthentication.cpp | src/gmcapi/Paths/GmcAuthentication.hpp
build .build/gmcapi/Paths/GmcCsrfInitialization.o: cc src/gmcapi/Paths/GmcCsrfInitialization.cpp | src/gmcapi/Paths/GmcCsrfInitialization.hpp
build .build/gmcapi/Paths/GmcDefaultServerFetch.o: cc src/gmcapi/Paths/GmcDefaultServerFetch.cpp | src/gmcapi/Paths/GmcDefaultServerFetch.hpp
build .build/gmcapi/Paths/GmcServerGetInfo.o: cc src/gmcapi/Paths/GmcServerGetInfo.cpp | src/gmcapi/Paths/GmcServerGetInfo.hpp
build .build/gmcapi/Paths/GmcServerRcon.o: cc src/gmcapi/Paths/GmcServerRcon.cpp | src/gmcapi/Paths/GmcServerRcon.hpp
build .build/gmcapi/Paths/GmcServerStart.o: cc src/gmcapi/Paths/GmcServerStart.cpp | src/gmcapi/Paths/GmcServerStart.hpp
build .build/gmcapi/Paths/GmcServerStop.o: cc src/gmcapi/Paths/GmcServerStop.cpp | src/gmcapi/Paths/GmcServerStop.hpp
build .build/gmcapi/Paths/GmcServerConsoleGet.o: cc src/gmcapi/Paths/GmcServerConsoleGet.cpp | src/gmcapi/Paths/GmcServerConsoleGet.hpp

# helper modules
build .build/scheduler/Scheduler.o: cc src/scheduler/Scheduler.cpp | src/scheduler/Scheduler.hpp
build .build/scheduler/IntervaledOperation.o: cc src/scheduler/IntervaledOperation.cpp | src/scheduler/IntervaledOperation.hpp
build .build/tasks/ServerRestarter.o: cc src/tasks/ServerRestarter.cpp | src/tasks/ServerRestarter.hpp
build .build/IntervalStartParser.o: cc src/IntervalStartParser.cpp | src/IntervalStartParser.hpp
build .build/tasks/ServerLogPrinter.o: cc  src/tasks/ServerLogPrinter.cpp | src/tasks/ServerLogPrinter.hpp

# main
build .build/main.o: cc src/main.cpp

# date.h & tz.h
build .build/date: mkdir
  # CMake touches the build directory when constructing
  # its build environment -- which causes this become
  # "dirty" immediately.  This tells ninja to ignore this.
  restat = 1

# The implicit dependency here will result in an error
# if you have not pulled the required submodule(s)
build .build/date/Makefile: cmake date | date/src
  flags = -DBUILD_TZ_LIB=ON
  buildflags = -B .build/date

build .build/date/libdate-tz.a: cmake .build/date | .build/date/Makefile
  flags = --build

build lib/libdate-tz.a: cp .build/date/libdate-tz.a

# executable
build server-restarter: link $
  .build/gmcapi/GmcApiRequest.o $
  .build/gmcapi/GmcConnection.o $
  .build/gmcapi/GmcServer.o $
  .build/gmcapi/Paths/GmcAuthentication.o $
  .build/gmcapi/Paths/GmcCsrfInitialization.o $
  .build/gmcapi/Paths/GmcDefaultServerFetch.o $
  .build/gmcapi/Paths/GmcServerGetInfo.o $
  .build/gmcapi/Paths/GmcServerRcon.o $
  .build/gmcapi/Paths/GmcServerStart.o $
  .build/gmcapi/Paths/GmcServerStop.o $
  .build/gmcapi/Paths/GmcServerConsoleGet.o $
  .build/scheduler/Scheduler.o $
  .build/scheduler/IntervaledOperation.o $
  .build/tasks/ServerRestarter.o $
  .build/IntervalStartParser.o $
  .build/tasks/ServerLogPrinter.o $
  .build/main.o $
  | lib/libdate-tz.a include/nlohmann/json.hpp
